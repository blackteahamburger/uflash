builtins       = ["_"]
exclude        = ["docs/conf.py", "tests/__init__.py", "tests/example.py"]
line-length    = 79
preview        = true
target-version = "py313"
unsafe-fixes   = true

[analyze]
    preview = true

[format]
    docstring-code-format     = true
    line-ending               = "lf"
    preview                   = true
    skip-magic-trailing-comma = true

[lint]
    future-annotations = true
    ignore = [
        "COM812",
        "COM819",
        "D203",
        "D206",
        "D207",
        "D208",
        "D212",
        "D300",
        "E111",
        "E114",
        "E117",
        "FBT001",
        "FBT002",
        "PLR0913",
        "PLR0914",
        "PLR0917",
        "Q000",
        "Q001",
        "Q002",
        "Q003",
        "Q004",
        "S404",
        "S602",
        "S603",
        "W191",
    ]
    select = ["ALL"]
    typing-extensions = false
    unfixable = ["T201"]

    [lint.isort]
        split-on-trailing-comma = false

    [lint.extend-per-file-ignores]
        "**/__init__.py*" = ["F401", "F403"]
        "tests/**/*.py" = [
            # at least this three should be fine in tests:
            "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
            "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
            "S101", # asserts allowed in tests...
            # The below are debateable
            "N801",
            "N802",
            "PLC2701",
            "PLR2004", # Magic value used in comparison, ...
            "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
            "SLF001",
        ]
